plugins {
    id 'java'
    id 'org.springframework.boot' version '3.3.6'
    id 'io.spring.dependency-management' version '1.1.6'
}

group = 'com.green'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}
/*

- Spring Cloud OpenFeign을 이용하기 위한 “spring-cloud-starter-openfeign”라이브러리를 추가해야 합니다.

- 또한, org.springframework.cloud:spring-cloud-dependencies도 함께 추가해야 합니다. 이를 추가하는 이유는 OpenFeign의 경우 Spring Cloud의 다른 컴포넌트들과 함께 작동하기 위해서 추가해야 합니다.
- 해당 프로젝트에서는 3.3.6 버전을 기준으로 구성하였기에 2023.0.3을 버전을 사용합니다.

 */
dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:2023.0.3"
    }
}

dependencies {
    // 더미데이터 생성용
    implementation 'net.datafaker:datafaker:2.4.2'

    // TSID 사용
    implementation 'io.hypersistence:hypersistence-utils-hibernate-60:3.9.1'

    // 환경변수
    implementation 'me.paulschwarz:spring-dotenv:4.0.0'

    //JWT
    implementation 'io.jsonwebtoken:jjwt:0.12.6'

    //log4jdbc 라이브러리 추가, Persistence Query문 / 결과값 확인
    runtimeOnly 'org.bgee.log4jdbc-log4j2:log4jdbc-log4j2-jdbc4.1:1.16'

    // swagger 라이브러리 추가
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.6.0'

    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-jdbc'
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-web'

    // Feign Client
    implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'

    implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:3.0.3'
    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    runtimeOnly 'org.mariadb.jdbc:mariadb-java-client'
    annotationProcessor 'org.projectlombok:lombok'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter-test:3.0.3'
    testImplementation 'org.springframework.security:spring-security-test:6.4.2'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    testCompileOnly 'org.projectlombok:lombok:1.18.36'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.36'
}

tasks.named('test') {
    useJUnitPlatform()
    jvmArgs "-Xshare:off"
}
